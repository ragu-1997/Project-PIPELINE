node('master') {
    try {
    	def dotnet = '/usr/bin/dotnet'
    	stage('Checkout') {
    	 cleanWs()
    	 checkout([$class: 'SubversionSCM', 
    		additionalCredentials: [], 
    		excludedCommitMessages: '', 
    		excludedRegions: '', 
    		excludedRevprop: '', 
    		excludedUsers: '', 
    		filterChangelog: false, 
    		ignoreDirPropChanges: false, 
    		includedRegions: '', 
    		locations: [[cancelProcessOnExternalsFail: true, 
    		credentialsId: 'JPV', depthOption: 'infinity', 
    		ignoreExternalsOption: true, local: '.', 
    		remote: 'https://192.168.1.200/svn/API/Products/Cloud BLM/Application/branches/Experimental branch/BackEnd Services- Unified Database/CloudBLM-UserService']], 
    		quietOperation: true, 
    		workspaceUpdater: [$class: 'UpdateUpdater']])
    	}
    	stage('Clean') {
    	    sh label: '', script: 'dotnet clean'
    	}
    	stage('Build') {
    		sh label: '', script: 'dotnet build --configuration Release'
    	}
    	stage('Stop Service') {
    		sh label: '', script: 'sudo systemctl stop cloudblm-user-service.service'
    	}
    	stage('Publish') {
    		sh label: '', script: 'sudo dotnet publish -c Release --output /opt/apps/UserManagement'
    	}
    	stage('Start Service') {
    		sh label: '', script: 'sudo systemctl start cloudblm-user-service.service'
    	}
        currentBuild.result = 'SUCCESS'
    } catch (Exception err) {
        currentBuild.result = 'FAILURE'
    }
    
}