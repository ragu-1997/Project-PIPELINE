---
# == Remove default configs
- name: Remove Default Mesos Configs
  file: state=absent path=/etc/mesos/

- name: Remove Mesos ZK File
  file: state=absent path=/etc/mesos/zk

- name: Remove Default Mesos-Master Config
  file: state=absent path=/etc/mesos-master/

- name: Remove Default Mesos-Slave Config
  file: state=absent path=/etc/mesos-slave/

# == Configure and recreate
- name: Mesos default config file
  template: src=conf-mesos.j2 dest=/etc/default/mesos
  notify:
    - Restart mesos-master
    - Restart mesos-slave
    - Cleanup meta/slaves/latest

- name: Mesos Master config file
  template: src=conf-mesos-master.j2 dest=/etc/default/mesos-master
  when: mesos_install_mode == "master" or mesos_install_mode == "master-slave"
  notify:
    - Restart mesos-master

- name: Mesos Slave config file
  template: src=conf-mesos-slave.j2 dest=/etc/default/mesos-slave
  when: mesos_install_mode == "slave" or mesos_install_mode == "master-slave"
  notify:
    - Restart mesos-slave
    - Cleanup meta/slaves/latest
    - Remove existing slave tasks

- name: Mesos Slave modules file
  template: src=conf-mesos-slave-modules.j2 dest={{mesos_slave_modules_file}}
  when: mesos_install_mode == "slave" or mesos_install_mode == "master-slave"
  notify:
    - Restart mesos-slave
    - Cleanup meta/slaves/latest
    - Remove existing slave tasks

- name: wait for zookeeper service to be registered
  wait_for:
    host: "{{ zookeeper_dns }}"
    port: "{{ zookeeper_client_port }}"
    delay: 10
    timeout: 300
    state: present
  when: mesos_install_mode == "master" or mesos_install_mode == "master-slave"

- name: wait for zookeeper to listen
  command: "/usr/local/bin/zookeeper-wait-for-listen.sh {{ ansible_default_ipv4.address }}"
  when: mesos_install_mode == "master" or mesos_install_mode == "master-slave"

- name: Mesos master systemd script
  template: src=mesos-master.service.j2 dest=/usr/lib/systemd/system/mesos-master.service
  when: mesos_install_mode == "master" or mesos_install_mode == "master-slave"
  notify:
    - Reload daemon
    - Restart mesos-master

- name: Mesos slave systemd script
  template: src=mesos-slave.service.j2 dest=/usr/lib/systemd/system/mesos-slave.service
  when: mesos_install_mode == "slave" or mesos_install_mode == "master-slave"
  notify:
    - Reload daemon
    - Restart mesos-slave

- name: Enable/Disable mesos-master service
  service: name=mesos-master enabled="{{ (mesos_install_mode == 'slave') | ternary('no', 'yes') }}"

- name: Enable/Disable mesos-slave service
  service: name=mesos-slave enabled="{{ (mesos_install_mode == 'master') | ternary('no', 'yes') }}"
