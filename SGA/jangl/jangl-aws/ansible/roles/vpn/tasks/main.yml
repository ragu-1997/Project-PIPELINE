---
- name: VPN Data Container
  docker_container:
    name: ovpn-data
    image: busybox
    state: present
    detach: False
    volumes:
    - /etc/openvpn
  register: data_container
  tags: ["vpn"]

- name: VPN initialize
  when: data_container.changed
  docker_container:
    name: ovpn-init
    image: "{{ openvpn_docker_image }}"
    state: started
    detach: False
    cleanup: True
    command: ovpn_genconfig -u "udp://{{ openvpn_external_address }}" -2 -C "{{ openvpn_network_tls_cipher }}" -N -d -D -r "{{ openvpn_external_route }}" -E "route {{ openvpn_network_route }} {{ openvpn_network_subnet }}" -i "{{ openvpn_azure_client_id }}" -I "{{ openvpn_azure_tenant_id }}" -g "{{ openvpn_azure_ad_allowed_group }}" -F "{{ openvpn_from_email }}" -M "{{ openvpn_smtp_server }}"
    log_driver: none
    volumes_from:
      - ovpn-data
  tags: ["vpn"]

- name: VPN initialize credentials
  when: data_container.changed
  docker_container:
    name: ovpn-init-credentials
    image: "{{ openvpn_docker_image }}"
    state: started
    detach: False
    cleanup: True
    command: "ovpn_initpki nopass"
    log_driver: none
    volumes_from:
      - ovpn-data
  tags: ["vpn"]

- name: VPN Start Server
  docker_container:
    name: ovpn-server
    state: started
    restart_policy: always
    image: "{{ openvpn_docker_image }}"
    privileged: True
    volumes_from:
      - ovpn-data
    ports:
      - "{{ openvpn_external_port }}:{{ openvpn_external_port }}/udp"
    dns_servers:
      - "{{ openvpn_network_dns_server }}"
  tags: ["vpn"]

- name: VPN create users
  docker_container:
    name: ovpn-create-user
    image: "{{ openvpn_docker_image }}"
    state: started
    detach: False
    cleanup: True
    command: ovpn_create_user "{{ item }}"
    log_driver: none
    volumes_from:
      - ovpn-data
    dns_servers:
      - "{{ openvpn_network_dns_server }}"
  loop: "{{ openvpn_users|flatten(levels=1) }}"
  tags: ["vpn", "vpn_users"]


- name: generate vpn consul services
  become: yes
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  loop:
    - src: vpn-consul.json.j2
      dest: /etc/consul/vpn-consul.json
  notify:
    - reload consul
  tags:
    - consul
